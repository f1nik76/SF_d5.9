1. Создать двух пользователей 

from django.contrib.auth.models import User
User.objects.create_user(username = 'Vladimir', password = 'q1w2e3r4', first_name = 'Vladimir', last_name = 'Smirnov', email = 'vladmir@gmail.com')
User.objects.create_user(username = 'Tim', password = 'q1w2e3r4', first_name = 'Tim', last_name = 'Smirnov', email = 'tim@gmail.ru')

2. Создать два объекта модели Author, связанные с пользователем

from NewsPortal.models import *
Author.objects.create(user = User.objects.get(username = 'Vladimir'))
Author.objects.create(user = User.objects.get(username = 'Tim'))

3. Добавить 4 категории в модель Category

from NewsPortal.models import *
Category.objects.create(category_name = 'Спорт')
Category.objects.create(category_name = 'Бизнес')
Category.objects.create(category_name = 'Новые технологии')
Category.objects.create(category_name = 'Космос')

4. Добавить 2 статьи и 1 новость
Post.objects.create(author = Author(pk=1), post_type = 'PT', title = 'Title1', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

Post.objects.create(author = Author(pk=1), post_type = 'PT', title = 'Title2', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

Post.objects.create(author = Author(pk=2), post_type = 'NS', title = 'Title3', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

5. Присвоить им категории

PostCategory.objects.create(post = Post.objects.get(pk=1), category = Category.objects.get(category_name = 'Спорт'))
PostCategory.objects.create(post = Post.objects.get(pk=1), category = Category.objects.get(category_name = 'Бизнес'))
PostCategory.objects.create(post = Post.objects.get(pk=2), category = Category.objects.get(category_name = 'Космос'))
PostCategory.objects.create(post = Post.objects.get(pk=2), category = Category.objects.get(category_name = 'Новые технологии'))
PostCategory.objects.create(post = Post.objects.get(pk=3), category = Category.objects.get(category_name = 'Спорт'))

6. Создать 4 комментария к разным объектам модели Post

Comment.objects.create(post = Post.objects.get(pk=1), user = User.objects.get(username = 'Vladimir'), text = 'Огонь')
Comment.objects.create(post = Post.objects.get(pk=2), user = User.objects.get(username = 'Vladimir'), text = 'Очень интересно, но ничего не понятно')
Comment.objects.create(post = Post.objects.get(pk=3), user = User.objects.get(username = 'Vladimir'), text = 'Супер пиши еще!:)')
Comment.objects.create(post = Post.objects.get(pk=1), user = User.objects.get(username = 'Tim'), text = 'Ништяяк')

7. Применить функции like(), dislike(), скорректировать рейтинги объектов

Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=4).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).dislike()

8. Обновить рейтинги пользователей

Author.objects.get(pk=1).update_rating()
1. Создать двух пользователей 

from django.contrib.auth.models import User
User.objects.create_user(username = 'Vladimir', password = 'q1w2e3r4', first_name = 'Vladimir', last_name = 'Smirnov', email = 'vladmir@gmail.com')
User.objects.create_user(username = 'Tim', password = 'q1w2e3r4', first_name = 'Tim', last_name = 'Smirnov', email = 'tim@gmail.ru')

2. Создать два объекта модели Author, связанные с пользователем

from NewsPortal.models import *
Author.objects.create(user = User.objects.get(username = 'Vladimir'))
Author.objects.create(user = User.objects.get(username = 'Tim'))

3. Добавить 4 категории в модель Category

from NewsPortal.models import *
Category.objects.create(category_name = 'Спорт')
Category.objects.create(category_name = 'Бизнес')
Category.objects.create(category_name = 'Новые технологии')
Category.objects.create(category_name = 'Космос')

4. Добавить 2 статьи и 1 новость
Post.objects.create(author = Author(pk=1), post_type = 'PT', title = 'Title1', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

Post.objects.create(author = Author(pk=1), post_type = 'PT', title = 'Title2', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

Post.objects.create(author = Author(pk=2), post_type = 'NS', title = 'Title3', text = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.')

5. Присвоить им категории

PostCategory.objects.create(post = Post.objects.get(pk=1), category = Category.objects.get(category_name = 'Спорт'))
PostCategory.objects.create(post = Post.objects.get(pk=1), category = Category.objects.get(category_name = 'Бизнес'))
PostCategory.objects.create(post = Post.objects.get(pk=2), category = Category.objects.get(category_name = 'Космос'))
PostCategory.objects.create(post = Post.objects.get(pk=2), category = Category.objects.get(category_name = 'Новые технологии'))
PostCategory.objects.create(post = Post.objects.get(pk=3), category = Category.objects.get(category_name = 'Спорт'))

6. Создать 4 комментария к разным объектам модели Post

Comment.objects.create(post = Post.objects.get(pk=1), user = User.objects.get(username = 'Vladimir'), text = 'Огонь')
Comment.objects.create(post = Post.objects.get(pk=2), user = User.objects.get(username = 'Vladimir'), text = 'Очень интересно, но ничего не понятно')
Comment.objects.create(post = Post.objects.get(pk=3), user = User.objects.get(username = 'Vladimir'), text = 'Супер пиши еще!:)')
Comment.objects.create(post = Post.objects.get(pk=1), user = User.objects.get(username = 'Tim'), text = 'Ништяяк')

7. Применить функции like(), dislike(), скорректировать рейтинги объектов

Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=4).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).dislike()

8. Обновить рейтинги пользователей

Author.objects.get(pk=1).update_rating()
Author.objects.get(pk=2).update_rating()

9. Вывести username и рейтинг лучшего пользователя

Author.objects.all().order_by('-rating').values('user', 'rating')[0]

10. Вывести дату добавления, автора, рейтинг, заголовок и превью лучшей статьи

Post.objects.all().order_by('-rating').values('pub_time', 'author', 'rating', 'title')[0]
best_post = Post.objects.all().order_by('-rating')[0]
best_post.preview()

11. Вывести все комментарии к этой статье

Comment.objects.filter(post = best_post).values('pub_time', 'user', 'rating', 'text')

9. Вывести username и рейтинг лучшего пользователя

Author.objects.all().order_by('-rating').values('user', 'rating')[0]

10. Вывести дату добавления, автора, рейтинг, заголовок и превью лучшей статьи

Post.objects.all().order_by('-rating').values('pub_time', 'author', 'rating', 'title')[0]
best_post = Post.objects.all().order_by('-rating')[0]
best_post.preview()

11. Вывести все комментарии к этой статье

Comment.objects.filter(post = best_post).values('pub_time', 'user', 'rating', 'text')